security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        enterprise_provider:
            entity:
                class: App\Entity\Enterprise
                property: enterprise_email
        candidate_provider:
            entity:
                class: App\Entity\Candidate
                property: candidate_email
        multiple_providers:
            chain:
                providers: ['enterprise_provider', 'candidate_provider']


    enable_authenticator_manager: true
    # ...

    firewalls:
        enterprise_login:
            pattern: ^/api/profile/login_enterprise
            stateless: true
            lazy: true
            provider: enterprise_provider
            json_login:
                check_path: /api/profile/login_enterprise_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        candidate_login:
            pattern: ^/api/profile/login_candidate
            stateless: true
            lazy: true
            provider: candidate_provider
            json_login:
                check_path: /api/profile/login_candidate_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            

        api_admin:
            pattern : ^/api/admin
            stateless : true
            provider: multiple_providers
            jwt: ~

        api_enterprise:
            pattern: ^/api/enterprise
            stateless: true
            provider: enterprise_provider
            jwt: ~

        api_candidate:
            pattern: ^/api/candidate
            stateless: true
            provider: candidate_provider
            jwt: ~

    access_control:
        - { path: ^/api/profile/create_candidate, roles: PUBLIC_ACCESS}
        - { path: ^/api/profile/create_enterprise, roles: PUBLIC_ACCESS}
        - { path: ^/api/profile/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/candidate/get/, roles: IS_AUTHENTICATED_FULLY}
        - { path: ^/api/public, roles: PUBLIC_ACCESS}
        - { path: ^/enterprise, roles: ROLE_ENTERPRISE }
        - { path: ^/candidate, roles: ROLE_CANDIDATE }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
